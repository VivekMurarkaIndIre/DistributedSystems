#By default, spring reads information from application.properties files located under src/main/resources
#we can use this to dynamically allocate values
#example: now our server will start at 8585
server.port=8585
#This becomes the base url
server.servlet.context-path=/learning
#Session timeout
server.servlet.session.timeout=15m


#Spring security
spring.security.user.name=admin
spring.security.user.password=password
#spring.security.user.roles=admin
#Spring Security filters are registered with the lowest order and are the first filters invoked.
#For some use cases, if you want to put your custom filter in front of them, you will need to add padding to their order.
# here we can add 9 custom filter
spring.security.filter.order=10

security.jwt.token.secret-key=MySecretKeyShouldBeAtleast256Bits
security.jwt.token.expire-length=3600000


#create custom values like this and access in controller using @Value
developer.name=Vivek Murarka



#expose endpoints that are part of actuator
management.endpoints.web.exposure.include=*

#enable /actuator/info to take data from application.properties files
management.info.env.enabled=true

#information displayed for /actuator/info
info.app.name = Springboot app
info.app.description= Tutorial for spring boot
info.app.version = 1.0.0

#JDBC properties
spring.datasource.url=jdbc:mysql://localhost:3306/employee_directory?useSSL=false
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=pw

